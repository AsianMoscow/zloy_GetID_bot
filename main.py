from aiogram import Bot, Dispatcher, Router
from aiogram.types import Message
from aiogram import F
import asyncio
import logging
import os


API_TOKEN = os.getenv("zloy_GetID_bot__TOKEN")
if not API_TOKEN:
    raise ValueError("API token not set. Please define 'getId_bot_token' as an environment variable.")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler("bot.log"),
        logging.StreamHandler()
    ]
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞, –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
router = Router()
dp = Dispatcher()


@router.message(F)
async def get_ids(message: Message):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–∞—Ç–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã.
    –û—Ç–≤–µ—Ç–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –µ—Å–ª–∏ –µ–º—É –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    user_id = message.from_user.id
    username = message.from_user.username or "(–Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"
    first_name = message.from_user.first_name or "(–Ω–µ—Ç –∏–º–µ–Ω–∏)"
    last_name = message.from_user.last_name or "(–Ω–µ—Ç —Ñ–∞–º–∏–ª–∏–∏)"
    is_bot = message.from_user.is_bot

    chat_id = message.chat.id
    chat_type = message.chat.type
    chat_title = message.chat.title or "(–Ω–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è)"
    chat_username = message.chat.username or "(–Ω–µ—Ç username)"

    forward_info = "(–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.)"

    if message.forward_from:
        forward_user_id = message.forward_from.id
        forward_username = message.forward_from.username or "(–Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)"
        forward_first_name = message.forward_from.first_name or "(–Ω–µ—Ç –∏–º–µ–Ω–∏)"
        forward_last_name = message.forward_from.last_name or "(–Ω–µ—Ç —Ñ–∞–º–∏–ª–∏–∏)"
        forward_is_bot = message.forward_from.is_bot
        forward_info = (
            f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n"
            f"  - ID: {forward_user_id}\n"
            f"  - –ò–º—è: {forward_first_name}\n"
            f"  - –§–∞–º–∏–ª–∏—è: {forward_last_name}\n"
            f"  - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {forward_username}\n"
            f"  - –ë–æ—Ç: {'–î–∞' if forward_is_bot else '–ù–µ—Ç'}\n"
        )
    elif message.forward_from_chat:
        forward_chat_id = message.forward_from_chat.id
        forward_chat_title = message.forward_from_chat.title or "(–Ω–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è)"
        forward_chat_username = message.forward_from_chat.username or "(–Ω–µ—Ç username)"
        forward_chat_type = message.forward_from_chat.type
        forward_info = (
            f"üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–º —á–∞—Ç–µ:\n"
            f"  - ID: {forward_chat_id}\n"
            f"  - –ù–∞–∑–≤–∞–Ω–∏–µ: {forward_chat_title}\n"
            f"  - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {forward_chat_username}\n"
            f"  - –¢–∏–ø: {forward_chat_type}\n"
        )

    response_text = (
        f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n"
        f"  - ID: {user_id}\n"
        f"  - –ò–º—è: {first_name}\n"
        f"  - –§–∞–º–∏–ª–∏—è: {last_name}\n"
        f"  - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}\n"
        f"  - –ë–æ—Ç: {'–î–∞' if is_bot else '–ù–µ—Ç'}\n\n"
        f"üí¨ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:\n"
        f"  - ID: {chat_id}\n"
        f"  - –¢–∏–ø: {chat_type}\n"
        f"  - –ù–∞–∑–≤–∞–Ω–∏–µ: {chat_title}\n"
        f"  - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∞—Ç–∞: {chat_username}\n\n"
        f"{forward_info}"
    )

    logger.info(
        f"Processed message: User ID: {user_id}, Username: {username}, Chat ID: {chat_id}, Chat Type: {chat_type}, Title: {chat_title}"
    )
    await message.reply(response_text)


async def main():
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp.include_router(router)
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("Bot is starting...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
